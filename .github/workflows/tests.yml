name: Run Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  tests:
    name: PHP Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.5.6
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: safebillpro_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, bcmath, zip, soap
          coverage: none

      - name: Copy .env.testing
        run: |
          cp .env.example .env.testing
          sed -i 's/DB_DATABASE=.*/DB_DATABASE=safebillpro_test/' .env.testing
          sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env.testing
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env.testing

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Generate application key
        run: php artisan key:generate --env=testing

      - name: Run database migrations
        run: php artisan migrate --env=testing --force

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --testdox

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Check PHP syntax
        run: find . -name "*.php" -not -path "./vendor/*" -not -path "./node_modules/*" -exec php -l {} \; | grep -v "No syntax errors"

  build-assets:
    name: Build Assets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 14
        uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'npm'

      - name: Install NPM dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build assets for production
        run: npm run production

      - name: Verify assets were built
        run: |
          if [ ! -f "public/js/app.js" ]; then
            echo "Error: app.js was not built"
            exit 1
          fi
          if [ ! -f "public/css/app.css" ]; then
            echo "Error: app.css was not built"
            exit 1
          fi
          echo "âœ… Assets built successfully"
